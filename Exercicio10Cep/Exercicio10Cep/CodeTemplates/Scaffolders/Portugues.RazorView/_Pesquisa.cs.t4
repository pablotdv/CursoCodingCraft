<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output extension="cshtml" #>
<#@ assembly name="System.ComponentModel.DataAnnotations" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Entity" #>
<#@ assembly name="System.Data.Linq" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.ComponentModel.DataAnnotations" #>
<#@ import namespace="System.Data.Linq.Mapping" #>
<#@ import namespace="System.Data.Objects.DataClasses" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="EnvDTE" #>
<# 
	var viewDataType = (CodeType) Model.ViewDataType; 
	var modelType = (CodeType)Model.ModelType; 
    var modelName = modelType.Name; 
#>
@using <#= Model.DefaultNamespace #>.ViewModels;
@model <#= modelName #>ViewModel

<div class="panel panel-default">
    <div class="panel-heading">
        Pesquisa - @ViewBag.Title
    </div>
    <div class="panel-body">
        
		@Html.Partial("_ParametrosPesquisa", Model)

        <div class="row">
            <div class="col-lg-12">
                <div id="pesquisa">
                    <table class="table">
                        <thead>
                            <tr>
                                <th></th>
<#
List<ModelProperty> properties = GetModelProperties(Model.ViewDataType, true);
foreach (ModelProperty property in properties) {
    if (!property.IsPrimaryKey && !property.IsForeignKey) {
#>
									<th>
										<#= property.Name #>
									</th>
<#
    }
}
#>                                
                            </tr>
                        </thead>

                        <tbody>
							@foreach (var item in Model.Resultados) {
								<tr>
<# if (!String.IsNullOrEmpty(Model.PrimaryKeyName)) { #>
								<td>
									@Html.ActionLink("Edit", "Edit", new { id=item.<#= Model.PrimaryKeyName #> }) |
									@Html.ActionLink("Details", "Details", new { id=item.<#= Model.PrimaryKeyName #> }) |
									@Html.ActionLink("Delete", "Delete", new { id=item.<#= Model.PrimaryKeyName #> })
								</td>
<# } else { #>
								<td>
									@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
									@Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
									@Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
								</td>
<# } #>
<#  
foreach (ModelProperty property in properties) {
    if (!property.IsPrimaryKey && !property.IsForeignKey) {
#>
								<td>
									@<#= property.ValueExpression.Replace("Model.", "item.") #>
								</td>
<#
    }
}
#>
							</tr>
						}                            
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>

@Html.PagedListPager(Model.Resultados, page => Url.Action("Pesquisa",
    new <#= modelName #>ViewModel()
    {
        Pagina = page,
        //Parametros de pesquisa
    }),
    PagedListRenderOptionsCustom.Custom)


<#@ include file="ModelMetadataFunctions.cs.include.t4" #>